import { ethers } from "ethers";
import * as dotenv from "dotenv";
dotenv.config();

const provider = new ethers.JsonRpcProvider(process.env.INFURA_URL);

const wallet = new ethers.Wallet(process.env.PRIVATE_KEY!, provider);

export async function deployContract() {
  try {
    const lotteryAbi = [
      "function buyTicket() public payable",
      "function getPlayers() public view returns (address[] memory)",
      "event LotteryDrawn(address[] winners, uint256 round)",
      "event TicketPurchased(address indexed player, uint256 ticketNumber)"
    ];

    const lotteryBytecode = "6080604052670de0b6b3a76400006001556001600255348015601f575f5ffd5b50610dc78061002d5f395ff3fe608060405260043610610049575f3560e01c80631209b1f61461004d578063146ca531146100775780638b5b9ccc146100a1578063edca914c146100cb578063f71d96cb146100d5575b5f5ffd5b348015610058575f5ffd5b50610061610111565b60405161006e9190610746565b60405180910390f35b348015610082575f5ffd5b5061008b610117565b6040516100989190610746565b60405180910390f35b3480156100ac575f5ffd5b506100b561011d565b6040516100c29190610846565b60405180910390f35b6100d36101a7565b005b3480156100e0575f5ffd5b506100fb60048036038101906100f69190610894565b6102fa565b60405161010891906108ce565b60405180910390f35b60015481565b60025481565b60605f80548060200260200160405190810160405280929190818152602001828054801561019d57602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610154575b5050505050905090565b600a5f80549050106101ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e590610941565b60405180910390fd5b6001543414610232576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610229906109a9565b60405180910390fd5b5f33908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f0668f5b446eb814fe35b3206f43f14bd8567ba04ddaf7a3ee56516929ab22ccb5f805490506040516102db9190610746565b60405180910390a2600a5f80549050036102f8576102f7610334565b5b565b5f8181548110610308575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5f805490501461037b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037290610a37565b60405180910390fd5b5f42445f60405160200161039193929190610b85565b604051602081830303815290604052805190602001205f1c90505f600a826103b99190610bea565b90505f600a80846103ca9190610c47565b6103d49190610bea565b90505f600a6064856103e69190610c47565b6103f09190610bea565b90505b82820361041a57600a6014856104099190610c47565b6104139190610bea565b91506103f3565b5b8281148061042857508181145b1561044d57600a601e8561043c9190610c47565b6104469190610bea565b905061041b565b5f5f848154811061046157610460610c77565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f5f848154811061049f5761049e610c77565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f5f84815481106104dd576104dc610c77565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508273ffffffffffffffffffffffffffffffffffffffff166108fc674563918244f4000090811502906040515f60405180830381858888f19350505050158015610552573d5f5f3e3d5ffd5b508173ffffffffffffffffffffffffffffffffffffffff166108fc6729a2241af62c000090811502906040515f60405180830381858888f1935050505015801561059e573d5f5f3e3d5ffd5b508073ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec8000090811502906040515f60405180830381858888f193505050501580156105ea573d5f5f3e3d5ffd5b505f60405180606001604052808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525090507f3ce558233250964c9dfadd708511d333c72f2afc33c687ec90bbcbe5391412c0816002546040516106c0929190610d23565b60405180910390a15f5f6106d491906106f5565b60025f8154809291906106e690610d4a565b91905055505050505050505050565b5080545f8255905f5260205f20908101906107109190610713565b50565b5b8082111561072a575f815f905550600101610714565b5090565b5f819050919050565b6107408161072e565b82525050565b5f6020820190506107595f830184610737565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107b182610788565b9050919050565b6107c1816107a7565b82525050565b5f6107d283836107b8565b60208301905092915050565b5f602082019050919050565b5f6107f48261075f565b6107fe8185610769565b935061080983610779565b805f5b8381101561083957815161082088826107c7565b975061082b836107de565b92505060018101905061080c565b5085935050505092915050565b5f6020820190508181035f83015261085e81846107ea565b905092915050565b5f5ffd5b6108738161072e565b811461087d575f5ffd5b50565b5f8135905061088e8161086a565b92915050565b5f602082840312156108a9576108a8610866565b5b5f6108b684828501610880565b91505092915050565b6108c8816107a7565b82525050565b5f6020820190506108e15f8301846108bf565b92915050565b5f82825260208201905092915050565b7f4c6f74746572792066756c6c2e2057616974696e6720666f7220647261772e005f82015250565b5f61092b601f836108e7565b9150610936826108f7565b602082019050919050565b5f6020820190508181035f8301526109588161091f565b9050919050565b7f496e636f7272656374207469636b6574207072696365000000000000000000005f82015250565b5f6109936016836108e7565b915061099e8261095f565b602082019050919050565b5f6020820190508181035f8301526109c081610987565b9050919050565b7f4e6f7420656e6f75676820706c617965727320746f206472617720746865206c5f8201527f6f74746572790000000000000000000000000000000000000000000000000000602082015250565b5f610a216026836108e7565b9150610a2c826109c7565b604082019050919050565b5f6020820190508181035f830152610a4e81610a15565b9050919050565b5f819050919050565b610a6f610a6a8261072e565b610a55565b82525050565b5f81549050919050565b5f81905092915050565b5f819050815f5260205f209050919050565b610aa4816107a7565b82525050565b5f610ab58383610a9b565b60208301905092915050565b5f815f1c9050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610afd610af883610ac1565b610acc565b9050919050565b5f610b0f8254610aeb565b9050919050565b5f600182019050919050565b5f610b2c82610a75565b610b368185610a7f565b9350610b4183610a89565b805f5b83811015610b7857610b5582610b04565b610b5f8882610aaa565b9750610b6a83610b16565b925050600181019050610b44565b5085935050505092915050565b5f610b908286610a5e565b602082019150610ba08285610a5e565b602082019150610bb08284610b22565b9150819050949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610bf48261072e565b9150610bff8361072e565b925082610c0f57610c0e610bbd565b5b828206905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c518261072e565b9150610c5c8361072e565b925082610c6c57610c6b610bbd565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60039050919050565b5f81905092915050565b5f819050919050565b5f602082019050919050565b610cd681610ca4565b610ce08184610cae565b9250610ceb82610cb8565b805f5b83811015610d1b578151610d0287826107c7565b9650610d0d83610cc1565b925050600181019050610cee565b505050505050565b5f608082019050610d365f830185610ccd565b610d436060830184610737565b9392505050565b5f610d548261072e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d8657610d85610c1a565b5b60018201905091905056fea2646970667358221220d7ca7ab55b506aa8b03f6e2f613e00dc91753d89668afa8c2101b26ba5b0b5f964736f6c634300081c0033";

    console.log("Deploying contract...");

    const factory = new ethers.ContractFactory(lotteryAbi, lotteryBytecode, wallet);

    const contractInstance = await factory.deploy();

    await contractInstance.waitForDeployment();

    console.log("Contract deployed to:", contractInstance.target);
    console.log("Contract:", contractInstance);


    return contractInstance.target;
  } catch (error) {
    console.error("Error deploying contract:", error);
    throw error;
  }
}
